<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Host</name>
          <description></description>
          <defaultValue>10.4.198.181</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Service_name</name>
          <description></description>
          <defaultValue>ntpd.service</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UserName</name>
          <description></description>
          <defaultValue>opsadmin</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>Password</name>
          <description></description>
          <defaultValue>{AQAAABAAAAAQKq2bn8sj7Uoc3SEOELLkVSh60HLL+5Tj9a6WWNIG7n4=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
        stages {
                stage(&apos;Code Quality Check&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/prod/Linux-System-Services-Start/Services_Start/&quot;) {
                                        sh &quot;echo $Host &gt; inventory&quot;
                                        sh &quot;sh breakhost.sh&quot;
                                        sh &quot;echo $Service_name  &gt; serv.txt&quot;
                                        sh &quot;sh linebreak.sh&quot;
                                        sh &quot;sh server.sh&quot;
                                       
                                }
                        }
                }
                stage(&apos;Port Availability Check&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/prod/Linux-System-Services-Start/Services_Start/&quot;) {
                                        sh &apos;sudo ansible-playbook Service_start.yml -i inventory --tags=port_check&apos;
                                        }
                                }
                        }
                stage(&apos;Disk Health Check&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/prod/Linux-System-Services-Start/Services_Start/&quot;) {
                                        sh &apos;sudo ansible-playbook Service_start.yml -i inventory --tags=disk_check&apos;
                                        }
                                }
                        }
                stage(&apos;Restarting System Service&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/prod/Linux-System-Services-Start/Services_Start/&quot;) {
                                       sh &quot;sudo ansible-playbook Service_start.yml --tags=main&quot;
                                }
                        }
                }
                stage(&apos;Service Status Check&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/prod/Linux-System-Services-Start/Services_Start/&quot;) {
                                        sh &quot;sudo ansible-playbook Service_start.yml --skip-tags=&apos;IntegerationTest,main&apos;&quot;
                                }
                        }
                }
        }
        post {
                success {
                        echo &quot;Services started successfully&quot;
                }
                failure {
                        echo &quot;Service startup failed&quot;
                }
        }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>