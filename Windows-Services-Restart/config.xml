<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Server</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Service_Restart</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
		environment {
	    ansible_userid = credentials(&apos;ansible_userid&apos;)
        ansible_password = credentials(&apos;ansible_password&apos;)
        }
        stages {
                stage(&apos;Code Quality&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart/&quot;) {
                                        sh &apos;chmod 755 win_getservice.yml&apos;
                                        
                                }
                        }
                }
                stage(&apos;Validating Service&apos;) {
                        steps {
                            
                                dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart&quot;) {
                                        sh &apos;&apos;&apos;
cat &lt;&lt;EOT &gt; /var/lib/jenkins/workspace/Windows_Services_Restart/hosts
Server: &quot;$Server&quot;
Service_Restart: &quot;$Service_Restart&quot;
EOT
&apos;&apos;&apos;
                                        }
                                        
                                }
                               
                        }
                        
                
                stage(&apos;Validating Parameter&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart/&quot;) {
                                        sh &apos;&apos;&apos;echo $Service_Restart | sed -e $&quot;s/,/\\\n/g&quot; &gt;/var/lib/jenkins/workspace/Windows_Services_Restart/win_service/files/services.txt&apos;&apos;&apos;
                                        
                                }
                        }
                }
                stage(&apos;Port Availability Check&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart/&quot;) {
                                        sh &apos;sh server_add.sh&apos;
                                        sh &apos;ansible-playbook win_getservice.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags=PreUnitTest&apos;
                                }
                        }
                }
                stage(&apos;Restart System Service&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart/&quot;) {
                                       
                                       sh &apos;ansible-playbook win_getservice.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags=start_process --extra-vars @/var/lib/jenkins/workspace/Windows_Services_Restart/hosts&apos;
                                }
                        }
                }
                //stage(&apos;Restart System Service old&apos;) {
                  //      steps {
                    //            dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart/&quot;) {
                      //                 sh &apos;ansible-playbook win_getservice.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --skip-tags=PreUnitTest,SmokeTest&apos;
                        //        }
                        //}
                //}
                stage(&apos;Service status Check&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Windows_Services_Restart/&quot;) {
                                     sh &apos;sleep 15s&apos;
                                      sh &apos;#ansible-playbook win_getservice.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags=SmokeTest&apos;
                                }
                        }
                }
        }
        post {
                success {
                        echo &quot; Windows services started successfully&quot;
                }
                failure {
                        echo &quot;Windows services not started&quot;
                }
        }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>