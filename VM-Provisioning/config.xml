<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>VCenter_Hostname</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>xda</string>
              <string>xdb</string>
              <string>xdc</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Datacentre</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>MDC</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Template</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>xyz</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Cluster</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ClusterName</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Hostname</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Network_name</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>NetworkName</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>IP</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Gateway</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>netmask</name>
          <description></description>
          <defaultValue>255.255.255.0</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>dns_domain</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>sapsf.com</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>dns_server_1</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>10.2.12.1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>dns_server_2</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>10.12.1.1.</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>dns_suffix</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>sapsf.com</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AD_domain</name>
          <description></description>
          <defaultValue>sapsf.com</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AD_username</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>AD_password</name>
          <description></description>
          <defaultValue>{AQAAABAAAAAQhhAe/VTHNNvD+uQJJj9tX79TpXlcCBS/FnvexYAlfak=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Datastore</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>MDC-Gen</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>VM_Family</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Gold(8 vCPU, 16 GB RAM)</string>
              <string>Silver(4 vCPU, 8 GB RAM)</string>
              <string>Bronze(2 vCPU, 4 GB RAM)</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OU_Path</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
		environment {
		ansible_userid = credentials(&apos;ansible_userid&apos;)
        ansible_password = credentials(&apos;ansible_password&apos;)
        VCentre_Username = credentials(&apos;VCentre_Username&apos;)
        VCentre_Password = credentials(&apos;VCentre_Password&apos;)
        Default_Password = credentials(&apos;Default_Password&apos;)
        
        }
        stages {
                stage(&apos;Validating Parameters&apos;) {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/vm_provisioning&quot;) {
                                        sh &apos;&apos;&apos;
echo &quot;$VM_Family&quot;
echo &quot;$ansible_password&quot;
echo &quot;$VCentre_Password&quot;
echo &quot;$VCenter_Hostname&quot;
if [ &quot;$VCenter_Hostname&quot; == &quot;xda&quot; ];then
VCentre_Hostname=&quot;10.33.7.17&quot;
echo &quot;$VCentre_Hostname&quot;
elif [ &quot;$VCenter_Hostname&quot; == &quot;xdb&quot; ];then
VCentre_Hostname=&quot;10.33.7.17&quot;
elif [ &quot;$VCenter_Hostname&quot; == &quot;xdc&quot; ];then
VCentre_Hostname=&quot;10.33.7.17&quot;
fi
if [ &quot;$VM_Family&quot; == &quot;Gold(8 vCPU,16 GB RAM)&quot; ];then
Num_CPU=8
echo &quot;$Num_CPU&quot;
Memory_MB=16000
elif [ &quot;$VM_Family&quot; == &quot;Silver(4 vCPU, 8 GB RAM)&quot; ];then
Num_CPU=4
Memory_MB=8000
elif [ &quot;$VM_Family&quot; == &quot;Bronze(2vCPU, 4 GB RAM)&quot; ];then
Num_CPU=2
Memory_MB=4000
fi
cat &lt;&lt;EOT &gt; /playbooks/vm_provisioning/hosts
vcenter_hostname: &quot;$VCentre_Hostname&quot;
vcenter_username: &quot;$VCentre_Username&quot;
datacenter: &quot;$Datacentre&quot;
template: &quot;$Template&quot;
hostname: &quot;$Hostname&quot;
cluster: &quot;$Cluster&quot;
network_name: &quot;$Network_name&quot;
IP: &quot;$IP&quot;
netmask: &quot;$netmask&quot;
dns_domain: &quot;$dns_domain&quot;
dns_server_1: &quot;$dns_server_1&quot;
dns_server_2: &quot;$dns_server_2&quot;
dns_suffix: &quot;$dns_suffix&quot;
ad_domain: &quot;$AD_domain&quot;
ad_username: &quot;$AD_username&quot;
disk_datastore: &quot;$Datastore&quot;
ou_path: &quot;$OU_Path&quot;
num_cpu: &quot;$Num_CPU&quot;
num_cpu_cores_per_socket: &quot;$Num_cpu_cores_per_socket&quot;
memory_mb: &quot;$Memory_MB&quot;
vm_family: &quot;$VM_Family&quot;
EOT
&apos;&apos;&apos;
                                        }
                                }
                        }
                        stage(&apos;Validating vCenter connectivity&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password VCentre_Password=$VCentre_Password&quot; --tags precheck_vconnection --extra-var @/playbooks/vm_provisioning/hosts&apos;
									}
								}
					   }
                stage(&apos;Performing Pre-Checks&apos;) {
					parallel {
						stage(&apos;Memory&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password VCentre_Password=$VCentre_Password&quot; --tags precheck_memory --extra-vars @/playbooks/vm_provisioning/hosts&apos;
									}
								}
						}
						stage(&apos;CPU&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password VCentre_Password=$VCentre_Password&quot; --tags precheck_cpu --extra-vars @/playbooks/vm_provisioning/hosts&apos;
									}
							}
						}
						stage(&apos;DataStore&apos;){
							steps {
						        	dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
						            sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password VCentre_Password=$VCentre_Password&quot; --tags precheck_datastore --extra-vars @/playbooks/vm_provisioning/hosts&apos;
								}
							}
						}
                    }
                }
				stage(&apos;Initiating VM provisioning&apos;){
					steps {
						dir(&quot;/var/lib/jenkins/workspace/vm_provisioning&quot;) {
						            sh &apos;sh inventory.sh&apos;
									sh &quot;ansible-playbook main.yml -e &apos;ansible_user=$ansible_userid ansible_password=$ansible_password vcenter_password=$VCentre_Password default_password=$Default_Password ad_password=$AD_password&apos; --extra-vars @/playbooks/vm_provisioning/hosts&quot;
									}
						}
						
		        }

                stage(&apos;VM configure and IP assign&apos;){
					steps {
							dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password AD_password=$AD_password&quot; --tags medcheck_startup --extra-vars @/playbooks/vm_provisioning/hosts&apos;
									}
							}
						}
				stage(&apos;Performing Post-Checks&apos;) {
					parallel {
						stage(&apos;Domain Member&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory_post.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory_post -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags postcheck_domainmember&apos;
									}
								}
						}
						stage(&apos;Connect MSSQL database&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory_post.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory_post -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags postcheck_db&apos;
									}
							}
						}
						stage(&apos;Windows Activation&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos; sh inventory_post.sh&apos;
									sh &apos; ansible-playbook check.yml -i inventory_post -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags postcheck_winact&apos;
									}
							}
						}
						stage(&apos;AV Client Installation&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory_post.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory_post -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags postcheck_avclient&apos;
									}
							}
						}
						stage(&apos;Turn-Off Firewall&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory_post.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory_post -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags postcheck_winfirewall&apos;
									}
							}
						}
						stage(&apos;Hardening&apos;){
							steps {
						        dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password AD_password=$AD_password&quot; --tags postcheck_hardening --extra-vars &quot;ou_path=$OU_Path hostname=$Hostname ADuser=$AD_username&quot;&apos;
									}
							}
						}
                    }
                }
                stage(&apos;Completed&apos;){
							steps {
						        dir(&quot;/var/lib/jenkins/workspace/checks&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;#ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password AD_password=$AD_password&quot; --tags postcheck_hardening --extra-vars &quot;ou_path=$OU_Path hostname=$Hostname ADuser=$AD_username&quot;&apos;
									}
							}
						}
	}
	post {
        always {
            sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/vm_provisioning/hosts&apos;
			sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/checks/inventory&apos;
			sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/checks/inventory_post&apos;
			sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/vm_provisioning/inventory&apos;
        }
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>