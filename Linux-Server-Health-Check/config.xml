<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HostNames</name>
          <description></description>
          <defaultValue>10.170.153.161</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UserName</name>
          <description></description>
          <defaultValue>c5285762</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>Password</name>
          <description></description>
          <defaultValue>{AQAAABAAAAAQku8f+EqjdH7MATr39fT9lsQFu7x8Qa9TwlPEDKfNCsA=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
         stages {
               stage(&apos;Code Quality&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux_Server_Healthcheck&quot;)
                                {
                                        sh &apos;sh server.sh&apos;
                                        sh &apos;ansible-playbook Linux_server_report.yml -i inventory.txt --tags=port_check&apos;
                                 }
                               }
                 }
                 stage(&apos;Health Check Report&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux_Server_Healthcheck/&quot;)
                                {
                                        sh &apos;ansible-playbook Linux_server_report.yml -i inventory.txt --tags=health_check&apos;
                                 }
                               }
                 }
                  stage(&apos;Clear&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux_Server_Healthcheck/&quot;)
                                {
                                        sh &apos;ansible-playbook Linux_server_report.yml -i inventory.txt --tags=clear&apos;
                                 }
                               }

                 }
}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>