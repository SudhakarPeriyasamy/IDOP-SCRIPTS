<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction plugin="workflow-cps@2.74">
      <replacementLoadedScripts/>
    </org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>C5298958</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <org.jenkinsci.plugins.workflow.cps.replay.ReplayCause plugin="workflow-cps@2.74">
            <originalNumber>24</originalNumber>
          </org.jenkinsci.plugins.workflow.cps.replay.ReplayCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>DNSServer</name>
          <description></description>
          <value>10.4.196.15</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>Server_Name</name>
          <description></description>
          <value>ps4bkafka03</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>ZoneName</name>
          <description></description>
          <value>phx.sf.priv</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>IP_Address</name>
          <description></description>
          <value>10.4.37.231</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>Action</name>
          <description></description>
          <value>Add</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>DNSServer</string>
        <string>Server_Name</string>
        <string>ZoneName</string>
        <string>IP_Address</string>
        <string>Action</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.3.9">
      <stagesUUID>7905f5d6-3c4e-442f-87a4-d2fcd665e404</stagesUUID>
      <stagesList>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages plugin="pipeline-model-api@1.3.9">
          <stages>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Validating Parameters</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>dir</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">/var/lib/jenkins/workspace/a_dnsrecord</value>
                        </value>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <name>sh</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>script</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">

cat &lt;&lt;EOT &gt; /var/lib/jenkins/workspace/a_dnsrecord/hosts
Server_Name: &quot;$Server_Name&quot;
Domain_Name: &quot;$ZoneName&quot;
IP_ADDRESS: &quot;$IP_Address&quot;
Action: &quot;$Action&quot;
DNS_SERVER: &quot;$DNSServer&quot;
EOT
</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Validating A Record</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>dir</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">/var/lib/jenkins/workspace/a_dnsrecord</value>
                        </value>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          <name>script</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>scriptBlock</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">if ( params.Action == &apos;Add&apos;) {
                
				sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags a_validation_add --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
                           }
                           else if (params.Action == &apos;Remove&apos;) {
                                sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags a_validation_remove --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
}</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Add/Remove A Record</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>dir</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">/var/lib/jenkins/workspace/a_dnsrecord</value>
                        </value>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                          <name>script</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>scriptBlock</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">if ( params.Action == &apos;Add&apos;) {
						     
                                    sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;dns_created&quot; --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
}
                           else if (params.Action == &apos;Remove&apos;) {
                           sh &apos;sh inventory.sh&apos;
			   sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;dns_removed&quot; --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
}</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Validating PTR Record</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>dir</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">/var/lib/jenkins/workspace/a_dnsrecord</value>
                        </value>
                      </args>
                      <children>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <name>sh</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>script</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">sh inventory.sh</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <name>sh</name>
                          <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                            <arguments class="linked-hash-map">
                              <entry>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <key>script</key>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                  <value class="string">ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;ptr_fail&quot; --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts</value>
                                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              </entry>
                            </arguments>
                          </args>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      </children>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Completed</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <name>dir</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                        <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                          <value class="string">/var/lib/jenkins/workspace/a_dnsrecord</value>
                        </value>
                      </args>
                      <children/>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
          </stages>
          <uuid>7905f5d6-3c4e-442f-87a4-d2fcd665e404</uuid>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages>
      </stagesList>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@2.3.0">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
  </actions>
  <queueId>2282</queueId>
  <timestamp>1578300274450</timestamp>
  <startTime>1578300274452</startTime>
  <result>SUCCESS</result>
  <duration>38418</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
        agent any
		environment {
		ansible_userid = credentials(&apos;ansible_userid&apos;)
        ansible_password = credentials(&apos;ansible_password&apos;)
        
        }
        stages {
                stage(&apos;Validating Parameters&apos;) {
                        steps {
                            
                                dir(&quot;/var/lib/jenkins/workspace/a_dnsrecord&quot;) {
                                        sh &apos;&apos;&apos;

cat &lt;&lt;EOT &gt; /var/lib/jenkins/workspace/a_dnsrecord/hosts
Server_Name: &quot;$Server_Name&quot;
Domain_Name: &quot;$ZoneName&quot;
IP_ADDRESS: &quot;$IP_Address&quot;
Action: &quot;$Action&quot;
DNS_SERVER: &quot;$DNSServer&quot;
EOT
&apos;&apos;&apos;
                                        }
                                        
                                }
                               
                        }
                        
                stage(&apos;Validating A Record&apos;){
			steps {
			   dir(&quot;/var/lib/jenkins/workspace/a_dnsrecord&quot;) {
                              script {
                            if ( params.Action == &apos;Add&apos;) {
                
				sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags a_validation_add --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
                           }
                           else if (params.Action == &apos;Remove&apos;) {
                                sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags a_validation_remove --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
}
}									}
								}
					   }
					   
                
                         stage(&apos;Add/Remove A Record&apos;){
					steps {
						dir(&quot;/var/lib/jenkins/workspace/a_dnsrecord&quot;) {
                                    script {
                            if ( params.Action == &apos;Add&apos;) {
						     
                                    sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;dns_created&quot; --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
}
                           else if (params.Action == &apos;Remove&apos;) {
                           sh &apos;sh inventory.sh&apos;
			   sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;dns_removed&quot; --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
}
}                            	
                            
                            }
                        
						}
                    }		
		        stage(&apos;Validating PTR Record&apos;){
					steps {
						dir(&quot;/var/lib/jenkins/workspace/a_dnsrecord&quot;) {
                        sh &apos;sh inventory.sh&apos;
			   sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;ptr_fail&quot; --extra-vars @/var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
            
}
}
}
				stage(&apos;Completed&apos;){
							steps {								
								dir(&quot;/var/lib/jenkins/workspace/a_dnsrecord&quot;) {								    
									
										}
									} 
				        }
			}			

	post {
        always {
            sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/a_dnsrecord/hosts&apos;
	    sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/a_dnsrecord/inventory&apos;
        }
        
	}
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>179921043</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>948456316</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1340087703</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>153488738</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>327421640</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>72</iota>
    <head>1:72</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>