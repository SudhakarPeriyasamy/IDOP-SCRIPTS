<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>HostNames</name>
          <description></description>
          <defaultValue>10.8.20.89</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>UserName</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.PasswordParameterDefinition>
          <name>Password</name>
          <description></description>
          <defaultValue>{AQAAABAAAAAQ92xu8/CCYErJ9tD2ERn7QWjyQUluVeHzvZ96vPTlf6I=}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
        environment {
		
        ansible_userid = credentials(&apos;ansible_userid&apos;)

        ansible_password = credentials(&apos;ansible_password&apos;)

        }
         stages {
               stage(&apos;Code Quality&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux-Server-Details/&quot;)
                                {
                                        sh &apos;sh server_add.sh&apos;
                                 }
                               }
                 }
                 stage(&apos;Code Copying&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux-Server-Details/&quot;)
                                {
                                        sh &apos;sudo ansible-playbook Linux_server_report.yml -i inventory.txt --tags=copy&apos;
                                 }
                               }
                 }
                  stage(&apos;Generate Report&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux-Server-Details/&quot;)
                                {
                                        sh &apos;sudo ansible-playbook Linux_server_report.yml -i inventory.txt --tags=report -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot;&apos;
                                 }
                               }
                 }
                 stage(&apos;Clear&apos;)
                {
                        steps {
                                dir(&quot;/var/lib/jenkins/workspace/Linux-Server-Details/&quot;)
                                {
                                        sh &apos;sudo ansible-playbook Linux_server_report.yml -i inventory.txt --tags=clear -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot;&apos;
                                 }
                               }
                 }
                 }
                 post {
        always {
            sh &apos;#echo &quot;&quot; &gt; inventory&apos;
			
        }
        
	}
}
                 </script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>