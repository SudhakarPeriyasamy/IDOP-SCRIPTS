<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Server</name>
          <description></description>
          <defaultValue>10.4.196.15</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>CName</name>
          <description></description>
          <defaultValue>Poctest</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ZoneName</name>
          <description></description>
          <defaultValue>phx.sf.priv</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>HostNameAlias</name>
          <description></description>
          <defaultValue>ps4bkafka03</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Action</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>Add</string>
              <string>Remove</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
		environment {
		ansible_userid = credentials(&apos;ansible_userid&apos;)
        ansible_password = credentials(&apos;ansible_password&apos;)
        
        }
        stages {
                stage(&apos;Validating Parameters&apos;) {
                        steps {
                            
                                dir(&quot;/var/lib/jenkins/workspace/cname_dnsrecord&quot;) {
                                        sh &apos;&apos;&apos;

cat &lt;&lt;EOT &gt; /var/lib/jenkins/workspace/cname_dnsrecord/hosts
CName: &quot;$CName&quot;
Domain_Name: &quot;$ZoneName&quot;
FQDNHostname: &quot;$HostNameAlias.$ZoneName&quot;
Action: &quot;$Action&quot;
DNS_SERVER: &quot;$Server&quot;
EOT
&apos;&apos;&apos;
                                        }
                                        
                                }
                               
                        }
                        
                stage(&apos;Validating CNAME&apos;){
			steps {
			   dir(&quot;/var/lib/jenkins/workspace/cname_dnsrecord&quot;) {
                              script {
                            if ( params.Action == &apos;Add&apos;) {
                                
				sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags cname_validation_add --extra-vars @/var/lib/jenkins/workspace/cname_dnsrecord/hosts&apos;
                           }
                           else if (params.Action == &apos;Remove&apos;) {
                                sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags cname_validation_remove --extra-vars @/var/lib/jenkins/workspace/cname_dnsrecord/hosts&apos;
}
}									}
								}
					   }
                
                         stage(&apos;Add/Remove CNAME Record&apos;){
					steps {
						dir(&quot;/var/lib/jenkins/workspace/cname_dnsrecord&quot;) {
                                    script {
                            if ( params.Action == &apos;Add&apos;) {
						            
                                    sh &apos;sh inventory.sh&apos;
				sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;dns_created&quot; --extra-vars @/var/lib/jenkins/workspace/cname_dnsrecord/hosts&apos;
}
                           else if (params.Action == &apos;Remove&apos;) {
                           sh &apos;sh inventory.sh&apos;
			   sh &apos;ansible-playbook site.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password&quot; --tags &quot;dns_removed&quot; --extra-vars @/var/lib/jenkins/workspace/cname_dnsrecord/hosts&apos;
}
}                            	
                            
                            }
                        
						}
                    }		
		        
				
				stage(&apos;Completed&apos;){
							steps {								
								dir(&quot;/var/lib/jenkins/workspace/cname_dnsrecord&quot;) {								    
									
										}
									} 
				        }
			}			

				      			
						

                
	
	post {
        always {
            sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/cname_dnsrecord/hosts&apos;
	    sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/cname_dnsrecord/inventory&apos;
        }
        
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>