<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.0.9"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>VCenter_Hostname</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>DC8</string>
              <string>DC9</string>
              <string>DC10</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>Inventory_Hostname</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
        agent any
		environment {
        ansible_userid = credentials(&apos;ansible_userid&apos;)
        ansible_password = credentials(&apos;ansible_password&apos;)
        VCentre_Username = credentials(&apos;VCentre_Username&apos;)
        VCentre_Password = credentials(&apos;VCentre_Password&apos;)
        
        }
        stages {
                stage(&apos;Validating Parameters&apos;) {
                        steps {
                            
                                dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {
                                        sh &apos;&apos;&apos;
if [ &quot;$VCenter_Hostname&quot; == &quot;DC8&quot; ];then
VCentre_Hostname=&quot;10.8.87.39,10.8.87.43&quot;
elif [ &quot;$VCenter_Hostname&quot; == &quot;DC9&quot; ];then
VCentre_Hostname=&quot;10.8.87.40,10.8.87.41,10.8.87.39&quot;
elif [ &quot;$VCenter_Hostname&quot; == &quot;DC10&quot; ];then
VCentre_Hostname=&quot;10.8.87.40,10.8.87.41,10.8.87.39&quot;
fi
echo &quot;$VCentre_Hostname&quot; &gt; VC.txt
cat &lt;&lt;EOT &gt; /var/lib/jenkins/workspace/vm_delete/server_ip.txt
$Inventory_Hostname
EOT
value=&quot;$(cat /var/lib/jenkins/workspace/vm_delete/server_ip.txt | tr -s &apos; &apos; | cut -d &apos; &apos; -f 2 | tr &apos;\n&apos; &apos;,&apos; | sed &apos;s/,$//&apos;)&quot;
echo &quot;$value&quot; &gt; Host_Snap.txt
cat &lt;&lt;EOT &gt; /var/lib/jenkins/workspace/vm_delete/hosts
vcenter_username: &quot;$VCentre_Username&quot;
EOT
&apos;&apos;&apos;
                                        }
                                        
                                }
                               
                        }
                        
                stage(&apos;Validating Hostname&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password vcenter_password=$VCentre_Password&quot; --tags validate_connection --extra-vars @/var/lib/jenkins/workspace/vm_delete/hosts&apos;
									}
								}
					   }
                stage(&apos;Performing Pre-Checks&apos;) {
									
					parallel {
						stage(&apos;Validating vCenter connectivity&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password vcenter_password=$VCentre_Password&quot; --tags precheck_connection --extra-vars @/var/lib/jenkins/workspace/vm_delete/hosts&apos;
									}
								}
					   }
					   
					   
					   stage(&apos;Validating Server Reachability&apos;){
							steps {
								dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {
								    sh &apos;sh inventory.sh&apos;
									sh &apos;ansible-playbook check.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password vcenter_password=$VCentre_Password&quot; --tags medcheck_startup --extra-vars @/var/lib/jenkins/workspace/vm_delete/hosts&apos;
									}
								}
					   }
						
						
                    }
                }
                         stage(&apos;Validate VMs State&apos;){
					steps {
						dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {
				                           	
                                    sh &apos;sh inventory.sh&apos;
				    sh &apos;ansible-playbook main.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password vcenter_password=$VCentre_Password&quot; --tags &quot;vm_status&quot;  --extra-vars @/var/lib/jenkins/workspace/vm_delete/hosts&apos;
									
                                }
                            	
                          
                                }
                        
						}

                    
                         stage(&apos;Remove VM&apos;){
					steps {
						dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {
				                           	
                                    sh &apos;sh inventory.sh&apos;
				    sh &apos;ansible-playbook main.yml -i inventory -e &quot;ansible_user=$ansible_userid ansible_password=$ansible_password vcenter_password=$VCentre_Password&quot; --tags &quot;vm_folder,remove_vm&quot;  --extra-vars @/var/lib/jenkins/workspace/vm_delete/hosts&apos;
									
                                }
                            	
                          
                                }
                        
						}
		        
				
				stage(&apos;Completed&apos;){
							steps {								
								dir(&quot;/var/lib/jenkins/workspace/vm_delete&quot;) {								    
									
										}
									} 
				        }
			}			

				      			
						

                
	
	post {
        always {
            sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/vm_delete/hosts&apos;
			sh &apos;#echo &quot;&quot; &gt; /var/lib/jenkins/workspace/vm_delete&quot;/inventory&apos;
        }
        
	}
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>